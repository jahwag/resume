name: Generate and Translate PDFs

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build-and-translate:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    container:
      image: jahwag/latex-openai:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create output directory
        run: mkdir -p output

      - name: Compile LaTeX to PDF (English)
        run: |
          pdflatex -interaction=nonstopmode -output-directory=output resume.tex
          mv output/resume.pdf output/resume-eng.pdf

      - name: Translate .tex file to Swedish
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python3 -c "
          import openai
          import os
          
          def translate_chunk(chunk, client):
              response = client.chat.completions.create(
                  model='gpt-3.5-turbo',
                  messages=[
                      {'role': 'system', 'content': 'You are a translator. Translate the following LaTeX content to Swedish.'},
                      {'role': 'user', 'content': chunk}
                  ]
              )
              return response.choices[0].message.content.strip()
          
          def chunk_text(text, chunk_size=2048):
              chunks = []
              while len(text) > chunk_size:
                  pos = text.rfind('\n', 0, chunk_size)
                  if pos == -1:
                      pos = chunk_size
                  chunks.append(text[:pos])
                  text = text[pos:]
              chunks.append(text)
              return chunks
          
          api_key = os.getenv('OPENAI_API_KEY')
          client = OpenAI(api_key=api_key)
          
          with open('resume.tex', 'r') as file:
              english_text = file.read()
          
          chunks = chunk_text(english_text)
          translated_chunks = [translate_chunk(chunk, client) for chunk in chunks]
          swedish_text = '\n'.join(translated_chunks)
          
          with open('resume-sve.tex', 'w') as file:
              file.write(swedish_text)
          "

      - name: Print resume-sve.tex for debugging
        run: cat resume-sve.tex

      - name: Compile LaTeX to PDF (Swedish)
        run: |
          pdflatex -interaction=nonstopmode -output-directory=output resume-sve.tex
          mv output/resume-sve.pdf output/resume-sve.pdf

      - name: Upload PDFs
        uses: actions/upload-artifact@v2
        with:
          name: generated-pdfs
          path: output/*.pdf

